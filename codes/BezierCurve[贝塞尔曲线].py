import numpy as np
import matplotlib.pyplot as plt

T = np.array(
    [
        [237,   620,    237,    620,    237,    120,    237,    120],
        [237,   120,    237,    35,     226,    24,     143,    19],
        [143,   19,     143,    19,     143,    0,      143,    0],
        [143,   0,      143,    0,      435,    0,      435,    0],
        [435,   0,      435,    0,      435,    19,     435,    19],
        [435,   19,     353,    23,     339,    36,     339,    109],
        [339,   109,    339,    108,    339,    620,    339,    620],
        [339,   620,    339,    620,    393,    620,    393,    620],
        [393,   620,    507,    620,    529,    602,    552,    492],
        [552,   492,    552,    492,    576,    492,    576,    492],
        [576,   492,    576,    492,    570,    662,    570,    662],
        [570,   662,    570,    662,    6,      662,    6,      662],
        [6,     662,    6,      662,    0,      492,    0,      492],
        [0,     492,    0,      492,    24,     492,    24,     492],
        [24,    492,    48,     602,    71,     620,    183,    620],
        [183,   620,    183,    620,    237,    620,    237,    620]
    ]
)

def simpleTest():
    xy = np.array([[1,1],[1,3],[3,3],[2,2]])
    bx = 3 * (xy[1][0]-xy[0][0])
    cx = 3 * (xy[2][0]-xy[1][0]) - bx
    dx = xy[3][0] - xy[0][0]-bx-cx
    by = 3 * (xy[1][1]-xy[0][1])
    cy = 3 * (xy[2][1]-xy[1][1]) - by
    dy = xy[3][1] - xy[0][1]-by-cy

    t = np.arange(0,1,0.01)
    x = xy[0][0] + bx * t + cx * t ** 2 + dx * t ** 3
    y = xy[0][1] + by * t + cy * t ** 2 + dy * t ** 3

    plt.scatter(xy[:,0], xy[:,1])
    plt.plot(x,y)
    plt.show()

def bezierCurve(points, delta = 0.01):
    x1, y1, x2, y2, x3, y3, x4, y4 = points
    bx = 3 * (x2-x1)
    cx = 3 * (x3-x2) - bx
    dx = x4 - x1 -bx -cx
    by = 3 * (y2 - y1)
    cy = 3 * (y3 - y2) - by
    dy = y4 - y1 - by - cy

    t = np.arange(0,1,delta)
    x = x1 + bx * t + cx * t ** 2 + dx * t ** 3
    y = y1 + by * t + cy * t ** 2 + dy * t ** 3
    return x, y

if __name__ == "__main__":
    for i in range(16):
        points = T[i, :] / 500
        x,y = bezierCurve(points, 0.002)
        plt.plot(x, y,c='black')
    plt.show()
